/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2306                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// 定义立方体的顶点坐标（以原点为中心）
vertices
(
    (-700 -700 -700)   // 顶点 0: 左下前
    (+700 -700 -700)   // 顶点 1: 右下前
    (+700 +700 -700)   // 顶点 2: 右上前
    (-700 +700 -700)   // 顶点 3: 左上前
    (-700 -700 +700)   // 顶点 4: 左下后
    (+700 -700 +700)   // 顶点 5: 右下后
    (+700 +700 +700)   // 顶点 6: 右上后
    (-700 +700 +700)   // 顶点 7: 左上后
);

// 定义六面体块（hex）和网格划分
blocks
(
    hex (0 1 2 3 4 5 6 7)  // 顶点索引顺序
    (40 40 40)             // 每个方向的网格单元数 (x y z)
    simpleGrading (1 1 1)  // 网格均匀分布
);

// 定义边（可选，此处无需曲线边）
edges
();

// 定义边界条件
boundary
(
    minX
    {
        type patch;        // 边界类型为 patch
        faces             // 左侧面（x=-700）
        (
            (0 3 7 4)
        );
    }
    maxX
    {
        type patch;        // 右侧面（x=+700）
        faces
        (
            (1 2 6 5)
        );
    }
    minY
    {
        type patch;        // 前侧面（y=-700）
        faces
        (
            (0 1 5 4)
        );
    }
    maxY
    {
        type patch;        // 后侧面（y=+700）
        faces
        (
            (3 2 6 7)
        );
    }
    minZ
    {
        type patch;        // 底面（z=-700）
        faces
        (
            (0 1 2 3)
        );
    }
    maxZ
    {
        type patch;        // 顶面（z=+700）
        faces
        (
            (4 5 6 7)
        );
    }
);

mergePatchPairs
();

// ************************************************************************* //